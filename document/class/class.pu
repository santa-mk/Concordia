class Resource {
    int getValue()
}

class Brick {
}

class Food {
}

class Tool {
}

class Wine {
}

class Cloth {
}

class Resource <|- Brick
class Resource <|- Food
class Resource <|- Tool
class Resource <|- Wine
class Resource <|- Cloth

enum CityGroup {
  A
  B
  C
  D
}

class Region {
  String name
  City[] cities
  Resouce bonusResource
  bool isPlayed

  bool enablePrefect()
  Resource[] prefect()
}

class RegionList {
  void refresh()
  int prefectCoin()
}

class BuildCost {
  int coin
  Resource[] resources
}

class City {
  String name
  CityGroup group
  Resource resource
  Road[] roads

  BuildCost cost()
  void build(BuildCost cost)
}

class Road {
  City[2] cities
  bool isColonistIn()
}

class RegionList *-- Region
class Region *-- City
class City *-- CityGroup

enum God {
  VESTA
  JUPITER
  SATURNUS
  MERCURIUS
  MARS
  MINERVA
}

Enum CardType {
  TRIBUNE
  ARCHITECT
  PREFECT
  COLONIST
  MERCATOR
  DIPLOMAT
  SENATOR
  CONSUL
  MASON
  FARMER
  SMITH
  VINTER
  WEAVER
}

class CardList {
  int playedNum()
  void refresh()
}
class Card {
  God god
  CardType type
  bool isPlayed

  bool enable()
}

class Card *-- God
class Card *-- CardType

enum PlayerColor {
  Red
  Blue
  Green
  Yellow
  Black
}

class ColonistList {
  void move()
}

class Colonist {
  Road isIn
  bool isRand
  PlayerColor color

  bool isRand()
}

class StoreHouse {
  Colonist[] colonist
  Resource[] resources
  bool isFull()
  bool push(Resource resouce)
  Resource pop(Resouce resouce)
}

class House {
  PlayerColor color
}

class Player {
  PlayerColor color
  int victoryPoint
  int coin
  bool isMagnus
  ColonistList colonists
  House[] houses
  CardList cards
  StoreHouse storeHouse

  bool isPrefectureMagnus()

  ' card action
  void tribune(bool addColonist)
  void architect()
  void prefect(bool getMoney)
  void colonist(bool getMoney)
  void mercator()
  int sell(Resource[] resources)
  Resource[] buy(Resource resource, int num)
}

class CardList *-- Card
class Colonist *-- PlayerColor
class ColonistList *-- Colonist
class House *-- PlayerColor
class StoreHouse *-- Colonist
class StoreHouse *-- Resource
class Player *-- StoreHouse
class Player *-- ColonistList
class Player *-- PlayerColor
class Player *-- CardList
class Player *-- House
